---
interface Props {
  title: string;
  demoUrl?: string;
  codeUrl: string;
  image: string;
  description: string;
  wip?: boolean;
  technologies: string[];
}

const { title, image, codeUrl, demoUrl, description, wip, technologies } = Astro.props;

---

<div class="flex flex-col relative">
  {
    wip && (
      <div class="font-bold absolute bg-black text-white -right-3 -top-3 p-2 px-3 rounded-full">
        <span>WIP</span>
      </div>
    )
  }
  <div class="max-h-80 border-t border-l border-r rounded-t-lg">
    <img
      src={image}
      class="rounded-t-lg object-fill"
      alt={`Image that show the first page of the ${title} project`}
    />
  </div>
  <div
    class="bg-white border rounded-b-lg px-4 py-6 flex flex-col gap-4 justify-between h-full"
  >
    <div class="flex flex-col gap-2">
      <h2 class="text-2xl font-semibold">{title}</h2>
      <p>
        {description}
      </p>
      <div class="flex flex-wrap gap-2">
        {
          technologies.map((technology) => (
            <span class="bg-gray-100 text-gray-500 text-xs rounded-full px-3 py-1 inline-block">
              {technology} 
            </span>
          ))
        }
      </div>
    </div>
    <div class="grid grid-cols-2 gap-2">
      <a
        class="hover:-translate-y-1 hover:shadow-2xl transition-all bg-black text-white p-2 rounded-md text-center"
        target="_blank"
        href={codeUrl}
      >
        Code
      </a>
      <a target="_blank" class="" href={demoUrl || "/"}>
        <button
          disabled={!demoUrl}
          class="hover:-translate-y-1 disabled:hover:translate-y-0 hover:shadow-2xl disabled:shadow-none transition-all h-full w-full border-2 border-black rounded-md disabled:bg-gray-100 disabled:text-gray-300 disabled:border-gray-100"
        >
          Demo
        </button>
      </a>
    </div>
  </div>
</div>
